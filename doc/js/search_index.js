var search_data = {"index":{"searchIndex":["ability","addcomplexityidtodeliverable","addlifecycleidtoproject","addprojectdeliverabletypeidtodeliverable","addprojectdeliverabletypetypetodeliverables","applicationcontroller","applicationhelper","changepolymorphicdetailsindeliverables","complexity","createcomplexities","createcustomdeliverabletypes","createdeliverabletypes","createdeliverables","createeffortlogs","createlifecyclephases","createlifecycles","createprojectphases","createprojects","createroles","createstockdeliverabletypes","createunitofmeasures","customdeliverabletype","deliverable","deliverabletype","deliverablescontroller","deliverableshelper","devisecreateusers","effortlog","effortlogscontroller","effortlogshelper","jasmine","config","specbuilder","lifecycle","lifecyclephase","lifecyclephasescontroller","lifecyclephaseshelper","lifecyclescontroller","lifecycleshelper","object","pet","application","pagescontroller","pageshelper","project","projectphase","projectphasescontroller","projectphaseshelper","projectscontroller","projectshelper","role","stockdeliverabletype","unitofmeasure","user","userscontroller","usershaveandbelongtomanyroles","usershelper","accessible_roles()","complexity_level()","create()","create()","create()","create()","create()","create_custom_deliverable_type()","dashboard()","declare_spec()","deliverable_type()","destroy()","destroy()","destroy()","does_not_overlap()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","edit()","edit()","edit()","estimated_effort()","estimated_effort()","estimations_should_be_valid()","get_del_with_avg_effort()","get_del_with_max_effort()","get_del_with_min_effort()","get_effort_log_user()","get_historical_data()","get_hours()","get_project()","get_project_phase_id_string()","get_same_stock_deliverable_types()","get_unit_of_measure()","get_user()","get_user_role()","home()","home()","index()","index()","index()","interrupt_time_value()","logged_effort()","logged_effort()","logged_effort()","logged_effort()","new()","new()","new()","new()","new()","new()","ordered_list()","overlaps?()","project_phase_deliverables()","role()","role=()","role?()","sequence_number_range()","show()","show()","show()","show()","show()","show()","show_phase_deliverables()","start_date_is_not_in_the_future()","start_date_time_format()","stop_date_is_not_before_start_date()","stop_date_is_not_in_the_future()","stop_date_time_format()","times_do_not_overlap()","unique_sequence_number()","unit_of_measure()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","update()","update()","update()","update()","valid_attributes()","classdiagram","modelassociations","screenflow","toolsandtechniques","gemfile","rakefile","readme_for_app"],"longSearchIndex":["ability","addcomplexityidtodeliverable","addlifecycleidtoproject","addprojectdeliverabletypeidtodeliverable","addprojectdeliverabletypetypetodeliverables","applicationcontroller","applicationhelper","changepolymorphicdetailsindeliverables","complexity","createcomplexities","createcustomdeliverabletypes","createdeliverabletypes","createdeliverables","createeffortlogs","createlifecyclephases","createlifecycles","createprojectphases","createprojects","createroles","createstockdeliverabletypes","createunitofmeasures","customdeliverabletype","deliverable","deliverabletype","deliverablescontroller","deliverableshelper","devisecreateusers","effortlog","effortlogscontroller","effortlogshelper","jasmine","jasmine::config","jasmine::specbuilder","lifecycle","lifecyclephase","lifecyclephasescontroller","lifecyclephaseshelper","lifecyclescontroller","lifecycleshelper","object","pet","pet::application","pagescontroller","pageshelper","project","projectphase","projectphasescontroller","projectphaseshelper","projectscontroller","projectshelper","role","stockdeliverabletype","unitofmeasure","user","userscontroller","usershaveandbelongtomanyroles","usershelper","applicationcontroller#accessible_roles()","deliverable#complexity_level()","deliverablescontroller#create()","effortlogscontroller#create()","lifecyclephasescontroller#create()","lifecyclescontroller#create()","projectscontroller#create()","deliverablescontroller#create_custom_deliverable_type()","pagescontroller#dashboard()","jasmine::specbuilder#declare_spec()","deliverable#deliverable_type()","deliverablescontroller#destroy()","lifecyclescontroller#destroy()","userscontroller#destroy()","effortlogscontroller#does_not_overlap()","addcomplexityidtodeliverable::down()","addlifecycleidtoproject::down()","addprojectdeliverabletypeidtodeliverable::down()","addprojectdeliverabletypetypetodeliverables::down()","changepolymorphicdetailsindeliverables::down()","createcomplexities::down()","createcustomdeliverabletypes::down()","createdeliverabletypes::down()","createdeliverables::down()","createeffortlogs::down()","createlifecyclephases::down()","createlifecycles::down()","createprojectphases::down()","createprojects::down()","createroles::down()","createstockdeliverabletypes::down()","createunitofmeasures::down()","devisecreateusers::down()","usershaveandbelongtomanyroles::down()","deliverablescontroller#edit()","lifecyclescontroller#edit()","userscontroller#edit()","project#estimated_effort()","projectphase#estimated_effort()","deliverable#estimations_should_be_valid()","stockdeliverabletype#get_del_with_avg_effort()","stockdeliverabletype#get_del_with_max_effort()","stockdeliverabletype#get_del_with_min_effort()","deliverableshelper#get_effort_log_user()","deliverablescontroller#get_historical_data()","projectshelper#get_hours()","deliverableshelper#get_project()","deliverableshelper#get_project_phase_id_string()","stockdeliverabletype#get_same_stock_deliverable_types()","deliverablescontroller#get_unit_of_measure()","applicationcontroller#get_user()","usershelper#get_user_role()","lifecyclescontroller#home()","projectscontroller#home()","lifecyclescontroller#index()","projectscontroller#index()","userscontroller#index()","effortlog#interrupt_time_value()","deliverable#logged_effort()","effortlog#logged_effort()","project#logged_effort()","projectphase#logged_effort()","ability::new()","deliverablescontroller#new()","effortlogscontroller#new()","lifecyclephasescontroller#new()","lifecyclescontroller#new()","projectscontroller#new()","project#ordered_list()","effortlog#overlaps?()","projectphase#project_phase_deliverables()","user#role()","user#role=()","user#role?()","lifecyclephase#sequence_number_range()","deliverablescontroller#show()","effortlogscontroller#show()","lifecyclescontroller#show()","projectphasescontroller#show()","projectscontroller#show()","userscontroller#show()","deliverablescontroller#show_phase_deliverables()","effortlog#start_date_is_not_in_the_future()","effortlog#start_date_time_format()","effortlog#stop_date_is_not_before_start_date()","effortlog#stop_date_is_not_in_the_future()","effortlog#stop_date_time_format()","effortlog#times_do_not_overlap()","lifecyclephase#unique_sequence_number()","deliverable#unit_of_measure()","addcomplexityidtodeliverable::up()","addlifecycleidtoproject::up()","addprojectdeliverabletypeidtodeliverable::up()","addprojectdeliverabletypetypetodeliverables::up()","changepolymorphicdetailsindeliverables::up()","createcomplexities::up()","createcustomdeliverabletypes::up()","createdeliverabletypes::up()","createdeliverables::up()","createeffortlogs::up()","createlifecyclephases::up()","createlifecycles::up()","createprojectphases::up()","createprojects::up()","createroles::up()","createstockdeliverabletypes::up()","createunitofmeasures::up()","devisecreateusers::up()","usershaveandbelongtomanyroles::up()","deliverablescontroller#update()","lifecyclephasescontroller#update()","lifecyclescontroller#update()","userscontroller#update()","object#valid_attributes()","","","","","","",""],"info":[["Ability","","Ability.html","","<p>This model represents access level for different roles of users\n"],["AddComplexityIdToDeliverable","","AddComplexityIdToDeliverable.html","","<p>Migration for adding complexity id to deliverable\n"],["AddLifecycleIdToProject","","AddLifecycleIdToProject.html","","<p>Migration for adding a lifecycle id to a project\n"],["AddProjectDeliverableTypeIdToDeliverable","","AddProjectDeliverableTypeIdToDeliverable.html","","<p>Migration for adding a project deliverable type id to a deliverable\n"],["AddProjectDeliverableTypeTypeToDeliverables","","AddProjectDeliverableTypeTypeToDeliverables.html","","<p>Migration for adding project deliverable type type to deliverables\n"],["ApplicationController","","ApplicationController.html","","<p>This the controller for the application. All other controllers inherit from\nthis controller\n"],["ApplicationHelper","","ApplicationHelper.html","","<p>Helper class for application\n"],["ChangePolymorphicDetailsInDeliverables","","ChangePolymorphicDetailsInDeliverables.html","","<p>Migration for modifying polymorphic details columns in deliverables Replace\nproject_deliverable_type_id …\n"],["Complexity","","Complexity.html","","<p>This model represents the complexity of a deliverable. There are three\ncomplexity values (low, medium, …\n"],["CreateComplexities","","CreateComplexities.html","","<p>Migration for creating complexities\n"],["CreateCustomDeliverableTypes","","CreateCustomDeliverableTypes.html","","<p>Migration for creating custom deliverable types\n"],["CreateDeliverableTypes","","CreateDeliverableTypes.html","","<p>Migration for creating deliverable types\n"],["CreateDeliverables","","CreateDeliverables.html","","<p>Migration for creating deliverables\n"],["CreateEffortLogs","","CreateEffortLogs.html","","<p>Migration for creating effort logs\n"],["CreateLifecyclePhases","","CreateLifecyclePhases.html","","<p>Migration for creating lifecycle phases\n"],["CreateLifecycles","","CreateLifecycles.html","","<p>Migration for creating lifecycles\n"],["CreateProjectPhases","","CreateProjectPhases.html","","<p>Migration for creating project phases\n"],["CreateProjects","","CreateProjects.html","","<p>Migration for creating projects\n"],["CreateRoles","","CreateRoles.html","","<p>Migration for creating roles\n"],["CreateStockDeliverableTypes","","CreateStockDeliverableTypes.html","","<p>Migration for creating stock deliverable types\n"],["CreateUnitOfMeasures","","CreateUnitOfMeasures.html","","<p>Migration for creating unit of measure\n"],["CustomDeliverableType","","CustomDeliverableType.html","","<p>This model represents the deliverable types that are created by the user.\n"],["Deliverable","","Deliverable.html","","<p>This model represents the deliverables created by the user. They are\nassociated with a stock deliverable …\n"],["DeliverableType","","DeliverableType.html","","<p>This model represents the stock deliverable types that can be created by\nthe user.\n"],["DeliverablesController","","DeliverablesController.html","","<p>This is the controller for our deliverable resource. It sets up instance\nvariables that will be used …\n"],["DeliverablesHelper","","DeliverablesHelper.html","","<p>Helper class for deliverables\n"],["DeviseCreateUsers","","DeviseCreateUsers.html","","<p>Migration for creating users\n"],["EffortLog","","EffortLog.html","","<p>A class to track the effort that is logged against a deliverable\n"],["EffortLogsController","","EffortLogsController.html","","<p>This is the controller for our effort log resource. It sets up instance\nvariables that will be used in …\n"],["EffortLogsHelper","","EffortLogsHelper.html","","<p>Helper class for effort logs\n"],["Jasmine","","Jasmine.html","","<p>Class to configure Jasmine\n<p>Note - this is necessary for rspec2, which has removed the backtrace\n"],["Jasmine::Config","","Jasmine/Config.html","",""],["Jasmine::SpecBuilder","","Jasmine/SpecBuilder.html","",""],["Lifecycle","","Lifecycle.html","","<p>This model represents the pre-defined lifecycles. Many projects can be\nassociated with a lifecycle, and …\n"],["LifecyclePhase","","LifecyclePhase.html","","<p>This model represents the pre-defined lifecycle phases. Lifecycles have\nmany lifecycle phases; each project …\n"],["LifecyclePhasesController","","LifecyclePhasesController.html","","<p>This is the controller for our lifecycle phase resource. It sets up\ninstance variables that will be used …\n"],["LifecyclePhasesHelper","","LifecyclePhasesHelper.html","","<p>Helper class for lifecycle phases\n"],["LifecyclesController","","LifecyclesController.html","","<p>This is the controller for our lifecycle resource. It sets up instance\nvariables that will be used in …\n"],["LifecyclesHelper","","LifecyclesHelper.html","","<p>Helper class for lifecycles\n"],["Object","","Object.html","",""],["PET","","PET.html","","<p>PET module\n"],["PET::Application","","PET/Application.html","","<p>PET application config class\n"],["PagesController","","PagesController.html","","<p>This is the controller for pages that are not associated with a resource.\nIt sets up instance variables …\n"],["PagesHelper","","PagesHelper.html","","<p>Helper class for pages\n"],["Project","","Project.html","","<p>This model represents user-created projects. Each project is associated\nwith a lifecycle, and has a collection …\n"],["ProjectPhase","","ProjectPhase.html","","<p>This model represents the phases associated with a given project. It is a\njoin table, that establishes …\n"],["ProjectPhasesController","","ProjectPhasesController.html","","<p>This is the controller for our project phase resource.  It provides\nfunctions (that return JSON strings) …\n"],["ProjectPhasesHelper","","ProjectPhasesHelper.html","","<p>Helper class for project phases\n"],["ProjectsController","","ProjectsController.html","","<p>This is the controller for our project resource. It sets up instance\nvariables that will be used in the …\n"],["ProjectsHelper","","ProjectsHelper.html","","<p>Helper class for projects\n"],["Role","","Role.html","","<p>This model represents the different roles of users. eg. Administrator and\nRegular User\n"],["StockDeliverableType","","StockDeliverableType.html","","<p>StockDeliverableType represents a join tables that make it possible to\nestablish a many-to-many relationship …\n"],["UnitOfMeasure","","UnitOfMeasure.html","","<p>This model represents the unit of measure associated with a DeliverableType\nor a CustomDeliverableType …\n"],["User","","User.html","","<p>This model represents a user\n"],["UsersController","","UsersController.html","","<p>This controller is for the administration of users. you can view individual\nusers, modify them if you …\n"],["UsersHaveAndBelongToManyRoles","","UsersHaveAndBelongToManyRoles.html","","<p>Migration for creating join table between users and roles\n"],["UsersHelper","","UsersHelper.html","","<p>Helper class for users\n"],["accessible_roles","ApplicationController","ApplicationController.html#method-i-accessible_roles","()","<p>Get roles accessible by the current user\n"],["complexity_level","Deliverable","Deliverable.html#method-i-complexity_level","()","<p>Return the complexity level associated with this deliverable\n"],["create","DeliverablesController","DeliverablesController.html#method-i-create","()","<p>POST /deliverables POST /deliverables.xml We are using polymorphic\nassociations to create this deliverable …\n"],["create","EffortLogsController","EffortLogsController.html#method-i-create","()","<p>POST /effort_logs POST /effort_logs.xml\n"],["create","LifecyclePhasesController","LifecyclePhasesController.html#method-i-create","()","<p>POST /lifecycles POST /lifecycles.xml\n"],["create","LifecyclesController","LifecyclesController.html#method-i-create","()","<p>POST /lifecycles POST /lifecycles.xml\n"],["create","ProjectsController","ProjectsController.html#method-i-create","()","<p>POST /projects POST /projects.xml On save, we associate phases and\ndeliverable types\n"],["create_custom_deliverable_type","DeliverablesController","DeliverablesController.html#method-i-create_custom_deliverable_type","()","<p>Creates a CustomDeliverableType Associates a ProjectPhase and UnitOfMeasure\nto the CustomDeliverableType …\n"],["dashboard","PagesController","PagesController.html#method-i-dashboard","()","<p>GET /pages/dashboard Controller action for displaying a summary of\nlifecycles and projects\n"],["declare_spec","Jasmine::SpecBuilder","Jasmine/SpecBuilder.html#method-i-declare_spec","(parent, spec)",""],["deliverable_type","Deliverable","Deliverable.html#method-i-deliverable_type","()","<p>Return the name of the deliverable type associated with this deliverable\n"],["destroy","DeliverablesController","DeliverablesController.html#method-i-destroy","()","<p>DELETE /deliverables/1 DELETE /deliverables/1.xml\n"],["destroy","LifecyclesController","LifecyclesController.html#method-i-destroy","()","<p>DELETE /lifecycles/1 DELETE /lifecycles/1.xml\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /users/1 DELETE /users/1.xml\n"],["does_not_overlap","EffortLogsController","EffortLogsController.html#method-i-does_not_overlap","()","<p>Check whether one effort log entry overlaps with another\n"],["down","AddComplexityIdToDeliverable","AddComplexityIdToDeliverable.html#method-c-down","()","<p>Remove column\n"],["down","AddLifecycleIdToProject","AddLifecycleIdToProject.html#method-c-down","()","<p>Remove column\n"],["down","AddProjectDeliverableTypeIdToDeliverable","AddProjectDeliverableTypeIdToDeliverable.html#method-c-down","()","<p>Remove column\n"],["down","AddProjectDeliverableTypeTypeToDeliverables","AddProjectDeliverableTypeTypeToDeliverables.html#method-c-down","()","<p>Remove column\n"],["down","ChangePolymorphicDetailsInDeliverables","ChangePolymorphicDetailsInDeliverables.html#method-c-down","()","<p>Undo replace columns\n"],["down","CreateComplexities","CreateComplexities.html#method-c-down","()","<p>Drop table\n"],["down","CreateCustomDeliverableTypes","CreateCustomDeliverableTypes.html#method-c-down","()","<p>Drop table\n"],["down","CreateDeliverableTypes","CreateDeliverableTypes.html#method-c-down","()","<p>Drop table\n"],["down","CreateDeliverables","CreateDeliverables.html#method-c-down","()","<p>Drop table\n"],["down","CreateEffortLogs","CreateEffortLogs.html#method-c-down","()","<p>Drop table\n"],["down","CreateLifecyclePhases","CreateLifecyclePhases.html#method-c-down","()","<p>Drop table\n"],["down","CreateLifecycles","CreateLifecycles.html#method-c-down","()","<p>Drop table\n"],["down","CreateProjectPhases","CreateProjectPhases.html#method-c-down","()","<p>Drop table\n"],["down","CreateProjects","CreateProjects.html#method-c-down","()","<p>Drop table\n"],["down","CreateRoles","CreateRoles.html#method-c-down","()","<p>Drop table\n"],["down","CreateStockDeliverableTypes","CreateStockDeliverableTypes.html#method-c-down","()","<p>Drop table\n"],["down","CreateUnitOfMeasures","CreateUnitOfMeasures.html#method-c-down","()","<p>Drop table\n"],["down","DeviseCreateUsers","DeviseCreateUsers.html#method-c-down","()","<p>Drop table\n"],["down","UsersHaveAndBelongToManyRoles","UsersHaveAndBelongToManyRoles.html#method-c-down","()","<p>Drop table\n"],["edit","DeliverablesController","DeliverablesController.html#method-i-edit","()","<p>GET /deliverables/1/edit\n"],["edit","LifecyclesController","LifecyclesController.html#method-i-edit","()","<p>GET /lifecycles/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()","<p>GET /users/1/edit\n"],["estimated_effort","Project","Project.html#method-i-estimated_effort","()","<p>Returns the estimated effort for the Project by taking the sum of the\nestimated effort for ProjectPhase …\n"],["estimated_effort","ProjectPhase","ProjectPhase.html#method-i-estimated_effort","()","<p>Returns estimated effort for a ProjectPhase by calculating the sum of the\nestimated effort for each  …\n"],["estimations_should_be_valid","Deliverable","Deliverable.html#method-i-estimations_should_be_valid","()","<p>Validates that the estimations are accurate and that size * production rate\n= effort\n"],["get_del_with_avg_effort","StockDeliverableType","StockDeliverableType.html#method-i-get_del_with_avg_effort","(complexity_id)","<p>return the StockDeliverableType deliverable with average estimated effort\nfor the given complexity_id …\n"],["get_del_with_max_effort","StockDeliverableType","StockDeliverableType.html#method-i-get_del_with_max_effort","(complexity_id)","<p>return the StockDeliverableType deliverable with maximum estimated effort\nfor the given complexity_id …\n"],["get_del_with_min_effort","StockDeliverableType","StockDeliverableType.html#method-i-get_del_with_min_effort","(complexity_id)","<p>return the StockDeliverableType deliverable with minimum estimated effort\nfor the given complexity_id …\n"],["get_effort_log_user","DeliverablesHelper","DeliverablesHelper.html#method-i-get_effort_log_user","(effort_log)","<p>Gets the user associated with the effort log\n"],["get_historical_data","DeliverablesController","DeliverablesController.html#method-i-get_historical_data","()","<p>Gets the Historical data for the given deliverable type and complexity\n"],["get_hours","ProjectsHelper","ProjectsHelper.html#method-i-get_hours","(field)","<p>Returns “hours” or “hour” based on the value for Project.estimated_effort\n"],["get_project","DeliverablesHelper","DeliverablesHelper.html#method-i-get_project","()","<p>Gets the project associated with the deliverable\n"],["get_project_phase_id_string","DeliverablesHelper","DeliverablesHelper.html#method-i-get_project_phase_id_string","()","<p>Gets the project phase id string associated with the deliverable\n"],["get_same_stock_deliverable_types","StockDeliverableType","StockDeliverableType.html#method-i-get_same_stock_deliverable_types","()","<p>return all the deliverable type records that are of the same deliverable\ntype as the given record\n"],["get_unit_of_measure","DeliverablesController","DeliverablesController.html#method-i-get_unit_of_measure","()","<p>Gets the UnitOfMeasure associated with the DeliverableType\n"],["get_user","ApplicationController","ApplicationController.html#method-i-get_user","()","<p>Make the current user object available to views\n"],["get_user_role","UsersHelper","UsersHelper.html#method-i-get_user_role","(user)","<p>Return a string containing the first user role (if present)\n"],["home","LifecyclesController","LifecyclesController.html#method-i-home","()","<p>GET /lifecycles/home\n"],["home","ProjectsController","ProjectsController.html#method-i-home","()","<p>GET /projects/home\n"],["index","LifecyclesController","LifecyclesController.html#method-i-index","()","<p>GET /lifecycles GET /lifecycles.xml\n"],["index","ProjectsController","ProjectsController.html#method-i-index","()","<p>GET /projects GET /projects.xml\n"],["index","UsersController","UsersController.html#method-i-index","()","<p>GET /users GET /users.xml\n"],["interrupt_time_value","EffortLog","EffortLog.html#method-i-interrupt_time_value","()","<p>Custom validator for checking that the interrupt time is &gt;= logged time\n"],["logged_effort","Deliverable","Deliverable.html#method-i-logged_effort","()","<p>function to get the total logged effort for this deliverable\n"],["logged_effort","EffortLog","EffortLog.html#method-i-logged_effort","()","<p>Return the number of hours that were logged,  and taking in to account the\ninterrupt time if there is …\n"],["logged_effort","Project","Project.html#method-i-logged_effort","()","<p>Returns the logged effort for the Project\n"],["logged_effort","ProjectPhase","ProjectPhase.html#method-i-logged_effort","()","<p>function to get the total logged effort for this deliverable\n"],["new","Ability","Ability.html#method-c-new","(user)","<p>Initializes the user access levels\n"],["new","DeliverablesController","DeliverablesController.html#method-i-new","()","<p>GET /deliverables/new GET /deliverables/new.xml\n"],["new","EffortLogsController","EffortLogsController.html#method-i-new","()","<p>GET /effort_logs/new GET /effort_logs/new.xml\n"],["new","LifecyclePhasesController","LifecyclePhasesController.html#method-i-new","()","<p>GET /lifecycle_phases/new GET /lifecycles_phases/new.xml\n"],["new","LifecyclesController","LifecyclesController.html#method-i-new","()","<p>GET /lifecycles/new GET /lifecycles/new.xml\n"],["new","ProjectsController","ProjectsController.html#method-i-new","()","<p>GET /projects/new GET /projects/new.xml\n"],["ordered_list","Project","Project.html#method-i-ordered_list","()","<p>returns the list of records in the ascending order of sequence numbers\n"],["overlaps?","EffortLog","EffortLog.html#method-i-overlaps-3F","(effort_log)","<p>Determine whether or not the given effort log overlaps this one To overlap,\nan effort log must begin …\n"],["project_phase_deliverables","ProjectPhase","ProjectPhase.html#method-i-project_phase_deliverables","()","<p>function to return the aggregated project phase deliverables with both\nstock and custom\n"],["role","User","User.html#method-i-role","()","<p>Create a ‘role’ virtual attribute\n"],["role=","User","User.html#method-i-role-3D","(role_id)","<p>Sets a ‘role’ to the user\n"],["role?","User","User.html#method-i-role-3F","(role)","<p>Gets the user role\n"],["sequence_number_range","LifecyclePhase","LifecyclePhase.html#method-i-sequence_number_range","()","<p>Custom validator to check whether sequence number is within acceptable\nrange The sequence numbering starts …\n"],["show","DeliverablesController","DeliverablesController.html#method-i-show","()","<p>GET /deliverables/1 GET /deliverables/1.xml\n"],["show","EffortLogsController","EffortLogsController.html#method-i-show","()","<p>GET /effort_logs/1 GET /effort_logs/1.xml\n"],["show","LifecyclesController","LifecyclesController.html#method-i-show","()","<p>GET /lifecycles/1 GET /lifecycles/1.xml\n"],["show","ProjectPhasesController","ProjectPhasesController.html#method-i-show","()","<p>Return JSON string for project phase details. Will be used by project show\npage.\n"],["show","ProjectsController","ProjectsController.html#method-i-show","()","<p>GET /projects/1 GET /projects/1.xml\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /users/1 GET /users/1.xml\n"],["show_phase_deliverables","DeliverablesController","DeliverablesController.html#method-i-show_phase_deliverables","()","<p>GET /deliverables/show_phase_deliverables Action to respond to ajax call to\nget the deliverables for …\n"],["start_date_is_not_in_the_future","EffortLog","EffortLog.html#method-i-start_date_is_not_in_the_future","()","<p>Custom validator for checking that stop date is not in the future\n"],["start_date_time_format","EffortLog","EffortLog.html#method-i-start_date_time_format","()","<p>Custom validator for checking the start_date_time format\n"],["stop_date_is_not_before_start_date","EffortLog","EffortLog.html#method-i-stop_date_is_not_before_start_date","()","<p>Custom validator for checking that stop date is not before start date\n"],["stop_date_is_not_in_the_future","EffortLog","EffortLog.html#method-i-stop_date_is_not_in_the_future","()","<p>Custom validator for checking that stop date is not in the future\n"],["stop_date_time_format","EffortLog","EffortLog.html#method-i-stop_date_time_format","()","<p>Custom validator for checking the stop_date_time format\n"],["times_do_not_overlap","EffortLog","EffortLog.html#method-i-times_do_not_overlap","()","<p>Custom validator for checking whether effort log time entries overlap\n"],["unique_sequence_number","LifecyclePhase","LifecyclePhase.html#method-i-unique_sequence_number","()","<p>Custom validator to check uniqueness of the sequence number\n"],["unit_of_measure","Deliverable","Deliverable.html#method-i-unit_of_measure","()","<p>Return the unit of measure associated with this deliverable\n"],["up","AddComplexityIdToDeliverable","AddComplexityIdToDeliverable.html#method-c-up","()","<p>Add column\n"],["up","AddLifecycleIdToProject","AddLifecycleIdToProject.html#method-c-up","()","<p>Add column\n"],["up","AddProjectDeliverableTypeIdToDeliverable","AddProjectDeliverableTypeIdToDeliverable.html#method-c-up","()","<p>Add column\n"],["up","AddProjectDeliverableTypeTypeToDeliverables","AddProjectDeliverableTypeTypeToDeliverables.html#method-c-up","()","<p>Add column\n"],["up","ChangePolymorphicDetailsInDeliverables","ChangePolymorphicDetailsInDeliverables.html#method-c-up","()","<p>Replace columns\n"],["up","CreateComplexities","CreateComplexities.html#method-c-up","()","<p>Add table\n"],["up","CreateCustomDeliverableTypes","CreateCustomDeliverableTypes.html#method-c-up","()","<p>Create table\n"],["up","CreateDeliverableTypes","CreateDeliverableTypes.html#method-c-up","()","<p>Add table\n"],["up","CreateDeliverables","CreateDeliverables.html#method-c-up","()","<p>Add table\n"],["up","CreateEffortLogs","CreateEffortLogs.html#method-c-up","()","<p>Add table\n"],["up","CreateLifecyclePhases","CreateLifecyclePhases.html#method-c-up","()","<p>Add table\n"],["up","CreateLifecycles","CreateLifecycles.html#method-c-up","()","<p>Add table\n"],["up","CreateProjectPhases","CreateProjectPhases.html#method-c-up","()","<p>Add table\n"],["up","CreateProjects","CreateProjects.html#method-c-up","()","<p>Add table\n"],["up","CreateRoles","CreateRoles.html#method-c-up","()","<p>Add table\n"],["up","CreateStockDeliverableTypes","CreateStockDeliverableTypes.html#method-c-up","()","<p>Add table\n"],["up","CreateUnitOfMeasures","CreateUnitOfMeasures.html#method-c-up","()","<p>Add table\n"],["up","DeviseCreateUsers","DeviseCreateUsers.html#method-c-up","()","<p>Add table\n"],["up","UsersHaveAndBelongToManyRoles","UsersHaveAndBelongToManyRoles.html#method-c-up","()","<p>Add table\n"],["update","DeliverablesController","DeliverablesController.html#method-i-update","()","<p>PUT /deliverables/1 PUT /deliverables/1.xml\n"],["update","LifecyclePhasesController","LifecyclePhasesController.html#method-i-update","()","<p>PUT /lifecycle_phases/1 PUT /lifecycle_phases/1.xml\n"],["update","LifecyclesController","LifecyclesController.html#method-i-update","()","<p>PUT /lifecycles/1 PUT /lifecycles/1.xml\n"],["update","UsersController","UsersController.html#method-i-update","()","<p>PUT /users/1 PUT /users/1.xml\n"],["valid_attributes","Object","Object.html#method-i-valid_attributes","()",""],["ClassDiagram","","Design/ClassDiagram_txt.html","","<p>Class Diagram\n<p>\n"],["ModelAssociations","","Design/ModelAssociations_txt.html","","<p>Model Associations\n<p>Ability\n<p>Complexity\n"],["ScreenFlow","","Design/ScreenFlow_txt.html","","<p>Screen Flow\n<p>Download as PDF (recommended): Screen_Flow.pdf\n<p>\n"],["ToolsAndTechniques","","Design/ToolsAndTechniques_txt.html","","<p>Tools and Techniques\n<p>JQuery\n<p>jQuery is a fast and concise JavaScript Library that simplifies HTML\ndocument …\n"],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’\n<p>gem ‘rails’, ‘3.0.9’\n<p>gem ‘sqlite3’ gem ‘pg’ gem ‘cancan’\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Welcome to PET 1.3\n<p>\n<p>The Process Enactment Tool 1.3 is a product of Sneakers. It commits to help\nsoftware …\n"]]}}